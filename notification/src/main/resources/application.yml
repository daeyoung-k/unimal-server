server:
  port: 8085
  servlet:
    context-path: /notification

spring:
  main:
    allow-bean-definition-overriding: true
  config:
    activate:
      on-profile: local
  application:
    name: notification-server

  data:
    redis:
      host: localhost
      port: 6379
      password: 6379

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SMTP_MAIL_USERNAME}
    password: ${SMTP_MAIL_PASSWORD}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

  kafka:
    bootstrap-servers: localhost:9091,localhost:9092,localhost:9093
    consumer:
      group-id: unimal-notification-group
      auto-offset-reset: latest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      missing-topics-fatal: false

grpc:
  server:
    port: 50085
    enable-keep-alive: true
    keep-alive-time: 60s
    keep-alive-timeout: 30s

custom:
  auth-tel-number: ${UNIMAL_AUTH_TEL_NUMBER:01012345678}
  naver-cloud:
    access-key: ${NAVER_CLOUD_ACCESS_KEY:test-access-key}
    secret-key: ${NAVER_CLOUD_SECRET_KEY:test-secret-key}
    sms-service-id: ${NAVER_CLOUD_SMS_SERVICE_ID:test-sms-service-id}
