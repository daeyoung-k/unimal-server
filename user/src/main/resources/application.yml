server:
  port: 8081
  servlet:
    context-path: /user

spring:
  main:
    allow-bean-definition-overriding: true
  config:
    activate:
      on-profile: local
  application:
    name: user-server

  jackson:
    time-zone: Asia/Seoul

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database: postgresql
    defer-datasource-initialization: true
    properties:
      hibernate:
        default_schema: unimal_user

  sql:
    init:
      mode: always
      continue-on-error: true

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${USER_DATABASE_HOST:localhost}:${USER_DATABASE_PORT:5432}/unimal
    username: ${USER_DATABASE_USERNAME:postgres}
    password: ${USER_DATABASE_PASSWORD:5432}
    dbcp2:
      default-schema: unimal_user

  data:
    redis:
      host: localhost
      port: 6379
      password: 6379

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/user/login/oauth2/kakao
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
            client-authentication-method: client_secret_post
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  kafka:
    bootstrap-servers: localhost:9091,localhost:9092,localhost:9093
    consumer:
      group-id: unimal-user-group
      auto-offset-reset: latest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      missing-topics-fatal: false

custom:
  jwt:
    secret-key: ${JWT_SECRET_KEY:and0LXNlY3JldC1rZXktand0LXNlY3JldC1rZXktand0LXNlY3JldC1rZXk=}


grpc:
  client:
    notification-grpc:
      address: static://localhost:50085
      negotiation-type: plaintext
